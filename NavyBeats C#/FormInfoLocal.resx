<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pboxAtras.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADgAAAA4CAYAAACohjseAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAA0xJREFUaEPt2+1O01AcBvAqYz0nxAjJIuwDYQgmJkQ+MDYjtAXGOo1XoMYLGM6P
        rtvkJRBHhyRGL0NvwZjoBUzRyM3Qsdb8+wKjh0lftvaU7EkeYHQd55dubdcdGMZITP8yKQhsttREfFVB
        fEWLVqtKfLH4MzZTWOo0nf2ARPkYr+9piJNUcuWIlKu0cW5Pw+vy7wtILMpHiJNOiRUiW+kUNphBnMkt
        6VuOuFO0C1syNpkTGDa70Yz007JbOUmNZ4tNBvG1E2Lh8hsFi7KGCwfRqNjQEFcmHUJNYYhfwuYVG9pw
        YiHNjE5PRaLJhTTOy4QDejmwcKAxo6mUtZulPhP3UzBmu2MAtD8OtRkAgwXesH33H4qAOio+//K5efvm
        xcUeQwnQwGVf7eLHhxoStj6bv/ePpAB4jsvvw1lGG61sq0jY+mIu94cMGWjHnZ8W9goZIrA7zqqw2Uar
        O1/tK7pKSMCrcXy5hZ9+0uKza3O92YJVov0COsaxd4V7ne++PWUkNcFy0hGbKf6wtx/AYHFGuh9TyT/u
        CxgG7v8hB+AZSB8OQg7CE5BOHIQciGsgvTgIORhXQAe4iobX32lMIp1kEolbzPj4SKC1D8YF0BFOL1du
        wWPiwmHg9Qp0jgu5XoHMcLb0AefrVOOgnoFspvTxOgP180b0sLRDO9IrEOIcuVxWcKFhvvDfB1o/QIgj
        pH6YGF+6w4yN3SZ24/2ufTAugZCrkZzUeaAfsj9AX0MMxj0QQi+SGIg3IIROJDEI70AIfUhiAP6AkDCQ
        gb3htRIsMjGVZHnpD5spfre3X0CIY2R8mp/3hQzhopOVK5CSilY2T9Hq7jf7iq4S0mVDK12QkopWt1Qk
        vI30hV8rNmSl3TMchAIgxES+3jY+fKldqw9frOiYobkXzzpv+w5FQIh1zOp+7HIbyoC9zwA4AFKeUbdA
        UY7UVK7h5IM0zjcIhwEUauTs3mXpBIlwDeWSiW80VpT16z6Eg68qxnRKOG0iFka8MJ1ycaPJxKZzAkwe
        Je4Q8eoTYqfM+dtIrB8jvtKy3ymy5SotVqxb87aNj7OwWP8V+UnpvKTqz0Zx/69pO3uPafxbweyTR3F4
        TV6246G9Qk2B/UkstbbSafoH/5ZwyuIUnNMAAAAASUVORK5CYII=
</value>
  </data>
</root>